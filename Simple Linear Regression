import numpy as np
import matplotlib.pyplot as mtp
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score



dataset = pd.read_csv('data.csv')  # Adjust the path if needed


x = dataset['Height'].values.reshape(-1, 1)  # Feature: Height
y = dataset['Weight'].values  # Target: Weight


x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=1/3, random_state=0)


regressor = LinearRegression()
regressor.fit(x_train, y_train)


y_pred = regressor.predict(x_test)
x_pred = regressor.predict(x_train)


mtp.scatter(x_train, y_train, color="green")
mtp.plot(x_train, x_pred, color="red")
mtp.title("Linear Regression on Height and Weight Dataset (Training Data)")
mtp.xlabel("Height (cm)")
mtp.ylabel("Weight (kg)")
mtp.show()


mtp.scatter(x_test, y_test, color="blue")
mtp.plot(x_train, x_pred, color="red")
mtp.title("Linear Regression on Height and Weight Dataset (Testing Data)")
mtp.xlabel("Height (cm)")
mtp.ylabel("Weight (kg)")
mtp.show()


print('Coefficients:', regressor.coef_)
print('Intercept:', regressor.intercept_)


print('Mean Squared Error:', mean_squared_error(y_test, y_pred))
print('Coefficient of Determination (R^2 Score):', r2_score(y_test, y_pred))
